/**
 * Write your model definitions here
 */

namespace network.om

enum ProductCategory {
  o MINING_RIG
  o MINING_KIT  
}

enum ContractStatus {
  o PROPOSED
  o SOURCING
  o APPROVED
  o PRODUCING
  o SERVICING  
  o SHIPPING    
  o CANCELLED
  o TERMINATED  
  o REVERSED    
  o COMPLETED      
}

enum SourceStatus {
  o PARTIAL
  o COMPLETED  
}

enum TaskType {
  o ASSEMBLING    
  o QUALITY_CONTROL
  o TESTING    
  o PACKAGING    
}

enum ProcessResult {
  o PENDING   
  o PASS    
  o FAIL
}

enum ProductVisibility {
  o PUBLIC // 
  o PRIVATE // only authorized person and organization can view transactions for this product
}

enum OrganizationType {
  o DISTRIBUTION
  o FACTORY    
  o MANUFACTURE        
  o LOGISTIC
  o FINANCE
  o VALUE_ADDED_SERVICES     
}

concept Address {
  o String address1
  o String address2  
  o String locality
  o String administrative_area
  o String country
  o String postal
}

/** 
* Circulation supply must NEVER be greater than maxSupply
* Max supply can be increased by 2/3 majority vote.
* After 2000 transactions add 200 tokens into circulation   
**/ 

concept Genesis {
  o Integer maxSupply default=21000000000
  o Integer circulationSupply default=0      
  o Double rewardPool default=0.0    
  o Double networkFeesPercentage default=1.0   
  o Integer transactionsCountForReward default=1000      
  o Integer networkTokenRewards default=500
  o Double defaultPenaltyPercentage default=1.0       
  o Integer maxOpenContract default=10
}
  
concept CollateralPart {
  --> Part part
  --> Contract contract  
  o Double amount default=0.0
  o DateTime heldOn
  o DateTime releasedOn  
}    
  
concept CollateralProduct {
  --> Product product
  --> Contract contract
  o Double amount 
  o DateTime heldOn
  o DateTime releasedOn  
}    
  
asset Product identified by productId {
  o String productId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  o String title
  o String description
  o ProductCategory category  
  o Integer upc optional
  -->Part[] parts optional 
  -->Workflow workflow optional
  -->Person creator // creator get 1% of every transaction for 3 years
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional     
}

asset Invoice identified by invoiceId {
    o String invoiceId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  --> Contract contract  
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional       
}

participant Organization identified by organizationId {
   o String organizationId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/    
   o String Name        
   o String Description
   o Double availableBalance default=0.00   
   o Double heldBalance default=0.00     
   o OrganizationType type                      
   --> Person contactPerson      
   --> Person[] authorizedPeople
   o Address contactAddress
   o Address shippingAddress   
   o DateTime createdOn
   o DateTime updatedOn optional
   o DateTime deletedOn optional        
}

participant Person identified by personId {
  o String personId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  o Double balance default=0.00
  o String email regex=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
  o String firstName
  o String middleName  
  o String lastName
  o String title optional
  o Address contactAddress       
  o Address shippingAddress optional      
  o String contactPhone regex=/^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$/
  --> Organization organization optional
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional       
}
  
asset Component identified by componentId {
  o String componentId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  o String title   
  o String description  
  o String sn optional  
  o String mpn optional 
  o Integer upc optional 
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional
} 
  
asset Part identified by partId {
  o String partId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  o Integer sequence
  o Integer count default=0
  --> Component component
  }

asset Contract identified by contractId {
  o String contractId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/  
  o ContractStatus contractStatus default="PROPOSED"
  --> Product product  
  --> Person orderer  
    
  // preferences
  o Component[] preferredComponents optional
  o Organization[] preferredOrganizations optional  
  
  // collection of asking price for manufacturing the product
  o askProduct[] estimateProducts optional
  
  // collection of asking price for sourced parts
  o askPart[] estimateParts optional  
  
  // source manufacturer and parts
  --> Organization sourcedManufacturer optional
  --> Part[] sourcedParts optional
  
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional
}
  
// propose a new contract 
// Person who propose a contract must have enough token in balance.
transaction ProposeContract {
  o String contractId  
  o ContractStatus contractStatus
  --> Product product
  --> Person orderer
  o Component[] preferredComponents optional
  o Organization[] preferredOrganizations optional    
  o DateTime createdOn  
}

event ProposeContractEvent {
  o String contractId  
  --> Person orderer  
}
  
// only owner to amend a contract
transaction AmendContract {
    o Double amount
    --> Contract contract
    --> Person owner
}

// contract owner can void a contract
// penalties: 1%  
transaction VoidContract {
    --> Contract contract
    --> Person owner
}  

  
/** SHIPMENT **/

  asset Shipment identified by shipmentId {
  o String shipmentId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
  --> Contract contract
  --> Product product optional
  --> Part part optional
  --> Organization carrier 
  o String trackingNumber  
  o DateTime acceptedOn optional   
  o DateTime createdOn     
}

  // release fund from consumer balance
transaction acceptShipment {
  --> Shipment shipment
  o DateTime createdOn      
}

// penalty: 1% to sender 
transaction rejectShipment {
  --> Shipment shipment
  --> Shipment newShipment  
}

asset Task identified by taskId {
  o String taskId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/ 
  o String title     
  o String description  
  o Integer sequence default=1    
  --> Product product
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional
}
  
// Tasks in a workflow must be completed in sequence.
asset Workflow identified by workflowId {
  o String workflowId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/ 
  o String title     
  o String description  
  --> Task[] tasks
  o DateTime createdOn
  o DateTime updatedOn optional
  o DateTime deletedOn optional 
}
  
// Processor must be authorized by a manufacturer.
asset Process identified by processId {
    o String processId regex=/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/ 
    o ProcessResult result default='PENDING'     
    --> Task task
    --> Person processor  
  	--> Contract contract
    o DateTime createdOn
    o DateTime completedOn optional                    
}
 
transaction askProduct {
  o Double amount  
  --> Contract contract
  --> Person accountManager
}

transaction askPart {
  o Double amount
  --> Contract contract
  --> Part part
  --> Person accountManager  
}

transaction createProcess {
  --> Task task  
  --> Process process
}

transaction endProcess {
  --> Task task  
  o DateTime completedOn
}

// only bank can depositFund
transaction depositFund {
  o Double amount
  --> Person to   
  o String confirmationNumber
  o String memo
  --> Organization bank
  o DateTime createdOn  
}
  
// transfer 
transaction transferFund {
  o Double amount
  --> Person fromPerson
  --> Person toPerson
  --> Organization fromOrg
  --> Organization toOrg
  o String memo
  o DateTime createdOn  
}
  
// only account owner can withdraw fund 
transaction withdrawFund {
  o Double amount
  --> Person from  
  o String confirmationNumber
  o String memo
  --> Organization toBank
  o DateTime createdOn 
}